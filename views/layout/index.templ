package layout

templ Base(title string) {
	<!DOCTYPE html>
	<html lang="en" data-theme="dark" class="dark">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta
				name="description"
				content="Go/Echo+Templ: Some Exploration for GO HTMX and Templ"
			/>
			<meta name="google" content="notranslate"/>
			<link rel="shortcut icon" href="/img/templ.png" type="image/png"/>
			<link rel="stylesheet" href="/css/styles.css"/>
			<link rel="stylesheet" href="/css/static.css"/>
			// <link rel="icon" type="image/x-icon" href="/img/favicon.png"/>
			<title>{ title }</title>
			<script src="https://unpkg.com/htmx.org@1.9.9" integrity="sha384-QFjmbokDn2DjBjq+fM+8LUIVrAgqcNW2s0PjAxHETgRn9l4fvX31ZxDxvwQnyMOX" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
			<script src="https://unpkg.com/hyperscript.org@0.9.12"></script>
			<!-- Alpine.js -->
			<!-- Alpine Plugins -->
			<script defer src="https://unpkg.com/@alpinejs/focus@3.x.x/dist/cdn.min.js"></script>
			<!-- Alpine Core -->
			<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<script>
                /* Script to toggle light and  mode */
            </script>
			// <script src="/js/confirm.js" defer></script>
			<script src="/js/keypress.js"></script>
		</head>
		<body hx-boost="true" class="dark:bg-terminal-base font-mono bg-terminal-base text-white leading-normal tracking-tighter">
			<layout class="w-full h-screen flex flex-col">
			//Todo: refactor to a nav compoent
			<header class="bg-primary flex justify-between items-center py-1 px-4">
            	<div class="flex space-x-4">
					//fix this home link
                	<button hx-get="/" hx-target="body" hx-swap="transition:true" class="text-white font-bold tracking-tight">home</button>
                	<button hx-get="/about" hx-target="#commandDisplay" hx-swap="transition:true" class="text-white">readme</button>
                	<button hx-get="/project" hx-target="#commandDisplay" hx-swap="transition:true" class="text-white">projects</button>
                	<button hx-get="/blog" hx-target="#commandDisplay" hx-swap="transition:true" class="text-white" disabled>blog <span class="text-xs">(coming soon)</span></button>
            	</div>
            		<div class="flex items-center space-x-2">
                		<span class="text-white btn btn-ghost btn-xs">LinkedIn</span>
                		<span class="text-white btn btn-ghost btn-xs">Github</span>
            		</div>
        	</header>
				
				<div id="commandDisplay" class="flex flex-col h-screen flex-grow py-6 mt-4">
					{ children... }
				</div>

			<div 
				class="py-8 group flex h-8 items-center hover:bg-terminal-hover">	
				<div class="bg-primary-400 w-[2px] h-[30px] shrink-0 animate-blink"></div>
				<form 
					hx-post="/commands"
					hx-target="#commandDisplay"			
					hx-swap="innerHTML transition:true"	
					hx-on::after-request="this.reset()"	>
						<input 
							name="command"
							id="commandBox"
							type="text" 
							autocomplete="off"
							placeholder="$ enter command here"
							class="px-4 border-none focus:ring-transparent text-white leading-tight bg-transparent"
						/>
					</form>
				</div>

				//Todo: refactor to a footer component
				<footer class="bg-primary flex justify-between items-center">
					<span id="currentText" class="bg-secondary-500 text-white px-2 text-sm">home.txt</span>
					<span id="errorText" class="bg-error-base text-white px-2 text-sm">Errors</span>
				</footer>
			
			</layout>
			
			<script lang="js">
			     document.body.addEventListener('htmx:beforeSwap', function(evt) {
			    if(evt.detail.xhr.status === 404){
			        // alert the user when a 404 occurs (maybe use a nicer mechanism than alert())
			        alert("Error: Could Not Find Resource");
			    } else if(evt.detail.xhr.status === 422){
			        // allow 422 responses to swap as we are using this as a signal that
			        // a form was submitted with bad data and want to rerender with the
			        // errors
			        //
			        // set isError to false to avoid error logging in console
                    alert("Bad Request Debug")
			        evt.detail.shouldSwap = true;
			        evt.detail.isError = false;
			    } else if(evt.detail.xhr.status === 418){
			        // if the response code 418 (I'm a teapot) is returned, retarget the
			        // content of the response to the element with the id `teapot`s
			        evt.detail.shouldSwap = true;
			        evt.detail.target = htmx.find("#teapot");
			    }
			});
			</script>
		</body>
	</html>
}
